(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    196230,       3895]
NotebookOptionsPosition[    192081,       3820]
NotebookOutlinePosition[    192549,       3837]
CellTagsIndexPosition[    192506,       3834]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Laboratorio 2 Mat1630L", "Title",
 CellChangeTimes->{{3.6661125991478567`*^9, 3.6661126010522037`*^9}, {
   3.6661141442882247`*^9, 3.6661141494058313`*^9}, {3.6663725249033937`*^9, 
   3.666372530871394*^9}, {3.666999999663395*^9, 3.66700001541004*^9}, {
   3.6682065983757353`*^9, 3.6682065984644327`*^9}, {3.6682068333687*^9, 
   3.668207010689354*^9}, {3.669213918294436*^9, 3.669213937934349*^9}, {
   3.6692139955167437`*^9, 3.669213997719954*^9}, 3.670914771507306*^9, {
   3.670914855232727*^9, 3.670914893734187*^9}, 3.7119911472117434`*^9, {
   3.711991268304674*^9, 3.71199126834389*^9}, {3.743527806577673*^9, 
   3.743527806820429*^9}, {3.746129915065494*^9, 3.7461299151265182`*^9}, {
   3.764278466636182*^9, 3.7642784667646713`*^9}, {3.764278719086277*^9, 
   3.7642787192759237`*^9}, {3.781869702125642*^9, 3.781869702193947*^9}, {
   3.797685387168125*^9, 3.797685391407568*^9}, {3.7976909330063887`*^9, 
   3.797690939632421*^9}, {3.857232211504081*^9, 
   3.857232214083406*^9}},ExpressionUUID->"2ef3dd32-2ecd-4b35-b479-\
30e2be5b84ee"],

Cell[CellGroupData[{

Cell["Preguntas", "Section",
 CellChangeTimes->{{3.66611268072779*^9, 3.666112682348935*^9}, {
  3.6670000560958433`*^9, 
  3.667000057288184*^9}},ExpressionUUID->"e653d2e1-e52a-402b-961c-\
1438eb5a1a38"],

Cell[CellGroupData[{

Cell["1) ", "Subsection",
 CellChangeTimes->{{3.6661126902612543`*^9, 3.6661126921836195`*^9}, {
   3.6661134341282883`*^9, 3.666113488907563*^9}, {3.6661137233394594`*^9, 
   3.6661137266848316`*^9}, {3.667000135488768*^9, 3.667000136387814*^9}, {
   3.781869782138303*^9, 3.78186978233212*^9}, {3.797685393140574*^9, 
   3.797685393219244*^9}, 
   3.7976864264235563`*^9},ExpressionUUID->"18605a16-c248-43cc-9457-\
9c8fc2d0f7cc"],

Cell["\<\
a) Como la tercera componente es Cos(t), entonces al menor el intervalo tiene \
que tener largo 2\[Pi]. Es f\[AAcute]cil ver, graficando, que la curva se \
grafica completa en el intervalo [0,2\[Pi]]. \
\>", "Text",
 CellChangeTimes->{{3.797685410510811*^9, 3.797685411354739*^9}, {
  3.7976864321710873`*^9, 3.7976864456606817`*^9}, {3.797686504623053*^9, 
  3.797686519360715*^9}, {3.797686663612154*^9, 3.797686685503092*^9}, {
  3.7976867252965593`*^9, 3.7976867450080223`*^9}, {3.7976868152510777`*^9, 
  3.7976868227322063`*^9}},ExpressionUUID->"c6468bc0-1221-499f-982e-\
8f8d25b10b15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "t_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "*", "t"}], "]"}]}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "t"}], "]"}], ",", 
    RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"g", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7976867685631742`*^9, 3.79768679575494*^9}, {
  3.7976868268164062`*^9, 3.797686848371572*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"fe0dfe8f-f769-4b4b-a7e0-f40773c9f34e"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
+9/9HyU/sRlyjbkhkz/vP///36f9H/JpihE=
       "]]},
     Annotation[#, "Charting`Private`Tag$1800#1"]& ]}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}, {
    Automatic, Automatic}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7976868492251377`*^9, 3.7976886941786423`*^9, 
  3.797688746417788*^9, 3.797688823712916*^9, 3.7976890913376627`*^9, 
  3.797689785788351*^9, 3.7978870854256897`*^9, 3.797887287065084*^9, 
  3.797887374114277*^9, 3.79793773027241*^9, 3.7979380638195047`*^9, 
  3.797938351570388*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"7cd001ae-cf3e-4e72-827e-fdf316a09316"]
}, Open  ]],

Cell["b) ", "Text",
 CellChangeTimes->{{3.6661135517475557`*^9, 3.666113579197919*^9}, {
  3.6670001105956097`*^9, 3.667000120560849*^9}, {3.701446537487486*^9, 
  3.701446545670621*^9}, {3.732522293204924*^9, 3.732522293405016*^9}, {
  3.736866217458232*^9, 3.7368662182569847`*^9}, {3.7818697843536777`*^9, 
  3.781869784444592*^9}, {3.7818698354078217`*^9, 3.7818698417860613`*^9}, {
  3.781899977372038*^9, 3.7818999964735107`*^9}, {3.797685406269842*^9, 
  3.797685409284433*^9}},ExpressionUUID->"5799799f-0f13-4f96-b872-\
08a1426cb179"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"g", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"g", "''"}], "[", "t", "]"}]}], "]"}], "]"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"g", "'"}], "[", "t", "]"}], "]"}], ")"}], "^", 
    "3"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Kappa]", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "12"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6661135587918663`*^9, {3.6661949600010185`*^9, 3.666194982009595*^9}, {
   3.666370306414394*^9, 3.666370324815394*^9}, 3.667000122665954*^9, {
   3.668959792661642*^9, 3.668959793712512*^9}, {3.668959861500635*^9, 
   3.668959910974723*^9}, {3.668959977563201*^9, 3.66896008858364*^9}, {
   3.668960127385406*^9, 3.668960131058155*^9}, {3.668960171612002*^9, 
   3.66896018378054*^9}, {3.668960216138236*^9, 3.668960429719301*^9}, 
   3.669213943953912*^9, {3.797686869240675*^9, 3.797686873549161*^9}, {
   3.797686933738336*^9, 3.797686937259206*^9}, {3.797686990428095*^9, 
   3.797687049265943*^9}, {3.797687531337088*^9, 3.797687562804888*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"04e010e1-10d7-4bd6-8565-e37ff963d318"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4aDFv2wJP2n8H+HMwDY=
       "]]},
     Annotation[#, "Charting`Private`Tag$2418#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 2 Pi}, {-2, 12}}, {{0, 6.283185307179586}, {-2, 12}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.797687050077198*^9, {3.797687550269845*^9, 3.7976875637279367`*^9}, 
   3.7976886946728992`*^9, 3.797688749349024*^9, 3.797688825481019*^9, 
   3.797689092853827*^9, 3.797689788553526*^9, 3.797937732817597*^9, 
   3.797938067326467*^9, 3.7979383560275173`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c874ba13-1ae5-4266-adb3-7874595ab329"]
}, Open  ]],

Cell["c) ", "Text",
 CellChangeTimes->{{3.736866197861061*^9, 3.736866200222576*^9}, {
  3.781869786795648*^9, 3.781869786918561*^9}, {3.781869846769614*^9, 
  3.781869854161415*^9}, {3.781899979576229*^9, 
  3.781899987248746*^9}},ExpressionUUID->"ebc0eb86-7732-4a64-8f05-\
137c8da978f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"g", "'"}], "[", "t", "]"}], ".", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"g", "'''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"g", "''"}], "[", "t", "]"}]}], "]"}]}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Norm", "[", 
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"g", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"g", "''"}], "[", "t", "]"}]}], "]"}], "]"}], ")"}], "^", 
    "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Tau]", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6661135587918663`*^9, {3.6661949600010185`*^9, 3.666194982009595*^9}, {
   3.666370306414394*^9, 3.666370324815394*^9}, 3.667000122665954*^9, {
   3.668959792661642*^9, 3.668959793712512*^9}, {3.668959861500635*^9, 
   3.668959910974723*^9}, {3.668959977563201*^9, 3.66896008858364*^9}, {
   3.668960127385406*^9, 3.668960131058155*^9}, {3.668960171612002*^9, 
   3.66896018378054*^9}, {3.668960216138236*^9, 3.668960429719301*^9}, 
   3.669213943953912*^9, {3.7976871057196093`*^9, 3.797687162476603*^9}, {
   3.797687246200001*^9, 3.7976872778462143`*^9}, {3.7976875709713087`*^9, 
   3.797687578436054*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ced0535a-7aac-463f-8dbb-226d3250e532"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xXHbUKaLQW766UTsf0637FjqNiT++fdQS2MS1tS/2a1Usg01fOqRN5j4gkvN
X3PsH9yGBm/sc6olZeI8jwkHnt1s6I4jv7joizx8a1NuRVeKDcXz/edNXsrD
pEcuXkEH2JBvfGIVnVk+dnm8FcCuzIaK6S5gFaUCrBggEMt0mg1xZ/Vmtw0X
4rSwk21rt9nQM2pyKr1eCY7P/HB0+AsbUtHbcUSwrBzb/L0u3ZnOhk5PThRH
rZbjg6dEReqz2ZCkiH21+cEf+HtnzEZBERvqUf7eHBT9A7dsfcGva9iQgJrz
wS//VWD6CyWnTk6xof3+jqp3DH5ik8nhS9HS7OjWoGgVh0w13qUUrx4mx446
SMVJv2yq8bjX7UOBiuzIp3PBsS6lGrvwTPO7H2NHOqdT+4tkavALleUOXR12
ZHi/vUxRoRYX+LOYbt1hR6Oj/qJrOvVYQPKAjWkyO0q/EV3wxLQJB4e8MExO
ZUfDqVMcMf5NmI0wpb6UyY7Sqt9eWEhrwnRDySLPC9mRmYa7ijxdM57+tK8u
p4Yd7eDiOiMa34wrtkse5JxhRy6nDx8YXW3BLrzbqUWKHEiMc7K191c7bqZn
fSz8nQMJRVOvUmd78UzqB9OLpRxoIlv2ptOuPrztmszxpxUcKF1OrJjeoA+j
rAtLS7UcSFH1ne7lwj6cZvn2VmMfB6rxVXD9+KQfv/ix6+zTLQ50kPTd8R1x
EGs+UeNfVudEw3RBKk3RQ9hcoWFORosTuWr3DFgUDGGPPvM6y7OcaNd/k+xd
TUM4S9nPv1GfE9kc7OFyJQxjcUr16hcrThS2947vUcthvHH6Sp+lPyci3Zg9
8Gb7CBZanCj48JwTjT4R3tl8cAQfivIIawziRC3PEXf/6RFss/JJ98Q7TmSx
enm/odMI7kwklwkncSLJf/zksJ8jOIfVOaHxNydS/Kjk0GY5iimevn9K6jiR
f0rQqT7nUSw0/0optYkT1R3v/xntN4o9u76WB3Rxor1aKmcN4kexZgqlX32C
E8nbbBpcGBnFbqLLexT+cKIKN9OHnAujOCmE4a7YPCc6Xm8T5EVHxuwe4n//
rnKiZ2rud2x3kHHz2WuCOaxENGU1se/6RTJmLLU2jeUgot2uiVPexmR8WOl+
/GtuIupaV6GcsSbj8B2hh+yFiEhcbZ6zyZuMa4NjHhrvIKKB6x68LwLI+B9j
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
HyXZuBw=
       "]]},
     Annotation[#, "Charting`Private`Tag$2497#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.4525029065914394`, 1.452507677261131}}, {{
     0, 6.283185307179586}, {-1.4525029065914394`, 1.452507677261131}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.797687278779552*^9, 3.7976875804337683`*^9, 
  3.797688697028322*^9, 3.7976887516050367`*^9, 3.797688828387176*^9, 
  3.797689094032557*^9, 3.797689789855101*^9, 3.79793773517784*^9, 
  3.7979380676052513`*^9, 3.7979383589820223`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7cba2194-0b4c-4a37-ad26-66f5fd81a4fd"]
}, Open  ]],

Cell["d) ", "Text",
 CellChangeTimes->{{3.736866206287356*^9, 3.736866208435419*^9}, {
  3.781869788719236*^9, 3.781869788820278*^9}, {3.781869859786419*^9, 
  3.7818698686736937`*^9}, {3.781899981803813*^9, 
  3.7818999891047773`*^9}},ExpressionUUID->"27b28d6b-6ce7-4056-b70f-\
bc98dec8c836"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "[", "t", "]"}], ",", 
     RowBox[{"\[Tau]", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "12"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.6661135587918663`*^9, {3.6661949600010185`*^9, 3.666194982009595*^9}, {
   3.666370306414394*^9, 3.666370324815394*^9}, 3.667000122665954*^9, {
   3.668959792661642*^9, 3.668959793712512*^9}, {3.668959861500635*^9, 
   3.668959910974723*^9}, {3.668959977563201*^9, 3.66896008858364*^9}, {
   3.668960127385406*^9, 3.668960131058155*^9}, {3.668960171612002*^9, 
   3.66896018378054*^9}, {3.668960216138236*^9, 3.668960429719301*^9}, 
   3.669213943953912*^9, {3.797687300427383*^9, 3.797687485146563*^9}, 
   3.797687519287977*^9, {3.797687592549865*^9, 3.797687603764676*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"413797f9-89f4-4d00-a895-6d0e2d979415"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
4aDFv2wJP2n8H+HMwDY=
          "]]}, Annotation[#, "Charting`Private`Tag$2549#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
xXHbUKaLQW766UTsf0637FjqNiT++fdQS2MS1tS/2a1Usg01fOqRN5j4gkvN
X3PsH9yGBm/sc6olZeI8jwkHnt1s6I4jv7joizx8a1NuRVeKDcXz/edNXsrD
pEcuXkEH2JBvfGIVnVk+dnm8FcCuzIaK6S5gFaUCrBggEMt0mg1xZ/Vmtw0X
4rSwk21rt9nQM2pyKr1eCY7P/HB0+AsbUtHbcUSwrBzb/L0u3ZnOhk5PThRH
rZbjg6dEReqz2ZCkiH21+cEf+HtnzEZBERvqUf7eHBT9A7dsfcGva9iQgJrz
wS//VWD6CyWnTk6xof3+jqp3DH5ik8nhS9HS7OjWoGgVh0w13qUUrx4mx446
SMVJv2yq8bjX7UOBiuzIp3PBsS6lGrvwTPO7H2NHOqdT+4tkavALleUOXR12
ZHi/vUxRoRYX+LOYbt1hR6Oj/qJrOvVYQPKAjWkyO0q/EV3wxLQJB4e8MExO
ZUfDqVMcMf5NmI0wpb6UyY7Sqt9eWEhrwnRDySLPC9mRmYa7ijxdM57+tK8u
p4Yd7eDiOiMa34wrtkse5JxhRy6nDx8YXW3BLrzbqUWKHEiMc7K191c7bqZn
fSz8nQMJRVOvUmd78UzqB9OLpRxoIlv2ptOuPrztmszxpxUcKF1OrJjeoA+j
rAtLS7UcSFH1ne7lwj6cZvn2VmMfB6rxVXD9+KQfv/ix6+zTLQ50kPTd8R1x
EGs+UeNfVudEw3RBKk3RQ9hcoWFORosTuWr3DFgUDGGPPvM6y7OcaNd/k+xd
TUM4S9nPv1GfE9kc7OFyJQxjcUr16hcrThS2947vUcthvHH6Sp+lPyci3Zg9
8Gb7CBZanCj48JwTjT4R3tl8cAQfivIIawziRC3PEXf/6RFss/JJ98Q7TmSx
enm/odMI7kwklwkncSLJf/zksJ8jOIfVOaHxNydS/Kjk0GY5iimevn9K6jiR
f0rQqT7nUSw0/0optYkT1R3v/xntN4o9u76WB3Rxor1aKmcN4kexZgqlX32C
E8nbbBpcGBnFbqLLexT+cKIKN9OHnAujOCmE4a7YPCc6Xm8T5EVHxuwe4n//
rnKiZ2rud2x3kHHz2WuCOaxENGU1se/6RTJmLLU2jeUgot2uiVPexmR8WOl+
/GtuIupaV6GcsSbj8B2hh+yFiEhcbZ6zyZuMa4NjHhrvIKKB6x68LwLI+B9j
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
HyXZuBw=
          "]]}, Annotation[#, "Charting`Private`Tag$2549#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-2, 12}}, {{0, 6.283185307179586}, {-2, 12}}], 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Kappa]", "(", "t", ")"}], 
       RowBox[{"\[Tau]", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.797687322438224*^9, 3.797687326951831*^9}, 
   3.797687366114501*^9, {3.797687418079627*^9, 3.797687431560504*^9}, 
   3.797687474284486*^9, 3.7976875204262753`*^9, 3.797687606293236*^9, 
   3.797688700245769*^9, 3.797688755782144*^9, 3.797688830604792*^9, 
   3.797689101200912*^9, 3.797689792974905*^9, 3.797937738059708*^9, 
   3.797938070304956*^9, 3.7979383636362133`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"c0cdfe73-cd9e-4709-8e76-2e21f5b866dd"]
}, Open  ]],

Cell["\<\
e)
Vector tangente.\
\>", "Text",
 CellChangeTimes->{{3.797685423707787*^9, 3.797685428072448*^9}, {
   3.79768816359394*^9, 3.797688167496975*^9}, 
   3.797688445016541*^9},ExpressionUUID->"3e8e5ebd-ccce-4751-ade6-\
9d409d7cc2fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tangente", "[", "t_", "]"}], "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "'"}], "[", "t", "]"}], "/", 
    RowBox[{"Norm", "[", 
     RowBox[{
      RowBox[{"g", "'"}], "[", "t", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797687686171256*^9, 3.797687737933915*^9}, {
   3.7976878540594788`*^9, 3.7976878687053003`*^9}, {3.7976881733386383`*^9, 
   3.797688181899454*^9}, 3.7976888507715607`*^9, {3.797689393273425*^9, 
   3.797689395735662*^9}, {3.7976895314433413`*^9, 3.7976895406644287`*^9}, 
   3.797689772046578*^9, {3.7976902801503057`*^9, 3.7976903580494843`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"95e38169-50d0-4987-8d38-2fa6eba9be6c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", "t", "]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}], "2"]}]}]]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}], "2"]}]}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}], "2"]}]}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", "t", "]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}], "2"]}]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.797690346762404*^9, 3.7976903545401287`*^9}, 
   3.797887091313942*^9, 3.797887288333579*^9, 3.797887375443301*^9, 
   3.797937740864399*^9, 3.797938087829911*^9, 3.797938371964858*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"17f0b809-7bb9-403b-ab62-c73cf2c8a7b8"]
}, Open  ]],

Cell["Vector normal.", "Text",
 CellChangeTimes->{{3.797688188917831*^9, 3.797688193024097*^9}, 
   3.797688443542726*^9},ExpressionUUID->"f7edd805-f400-4255-bfbd-\
7372da82bea8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"normal", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"tangente", "'"}], "[", "t", "]"}], "/", 
    RowBox[{"Norm", "[", 
     RowBox[{
      RowBox[{"tangente", "'"}], "[", "t", "]"}], "]"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.797688201124826*^9, 3.797688226932671*^9}, {
   3.797688782973261*^9, 3.7976887884951077`*^9}, {3.797689111132286*^9, 
   3.7976891589082603`*^9}, {3.797689258376422*^9, 3.797689280708165*^9}, {
   3.797689398210618*^9, 3.7976894028365793`*^9}, {3.797689553087134*^9, 
   3.797689557520358*^9}, 3.797689775465556*^9, {3.797690325399609*^9, 
   3.797690328075858*^9}, 3.79769036124422*^9, {3.797887097591364*^9, 
   3.7978871015660143`*^9}, {3.79788726531875*^9, 3.797887319122575*^9}, {
   3.79788737707408*^9, 3.7978873783308992`*^9}, {3.797887488786397*^9, 
   3.7978874904057693`*^9}, {3.797938082893331*^9, 3.797938085130225*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7eb95a61-51e5-48ca-96a0-0088490e6a48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "t"}], "]"}], "-", 
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "-", 
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"5", " ", "t"}], "]"}]}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"64", " ", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "t"}], "]"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "t", "]"}], "4"], " ", 
             RowBox[{"Sin", "[", "t", "]"}]}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", "t"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", "t", "]"}]}], "-", 
           RowBox[{"12", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "t"}], "]"}]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"5", " ", "t"}], "]"}]}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "t"}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"4", " ", "t"}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"4", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "t"}], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", "t", "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
           RowBox[{"3", "/", "2"}]]], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "t"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "t"}], "]"}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Sin", "[", "t", "]"}]}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "t"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"5", " ", "t"}], "]"}]}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"4", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "t"}], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", "t", "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
           RowBox[{"3", "/", "2"}]]], "]"}], "2"]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "t"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "t", "]"}], "4"], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"64", " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t"}], "]"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "t", "]"}], "4"], " ", 
              RowBox[{"Sin", "[", "t", "]"}]}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"4", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"4", " ", "t"}], "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Sin", "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
             RowBox[{"3", "/", "2"}]]], "]"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"10", " ", 
             RowBox[{"Cos", "[", "t", "]"}]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "t"}], "]"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"5", " ", "t"}], "]"}]}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "t"}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "t"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", "t"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{"3", "-", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "t"}], "]"}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"Sin", "[", "t", "]"}]}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "t"}], "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"5", " ", "t"}], "]"}]}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", "t"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "]"}], "2"]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "t"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"10", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "-", 
      RowBox[{"12", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "t"}], "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "t"}], "]"}]}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}], 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"64", " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t"}], "]"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "t", "]"}], "4"], " ", 
              RowBox[{"Sin", "[", "t", "]"}]}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"4", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"4", " ", "t"}], "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Sin", "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
             RowBox[{"3", "/", "2"}]]], "]"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"10", " ", 
             RowBox[{"Cos", "[", "t", "]"}]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "t"}], "]"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"5", " ", "t"}], "]"}]}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "t"}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "t"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", "t"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{"3", "-", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "t"}], "]"}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"Sin", "[", "t", "]"}]}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "t"}], "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"5", " ", "t"}], "]"}]}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", "t"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "]"}], "2"]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "t"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7976903615521393`*^9, 3.797887102152521*^9, {3.7978872698332148`*^9, 
   3.797887320637795*^9}, 3.797887379038486*^9, 3.797887491743734*^9, 
   3.7979377456688643`*^9, {3.797938085749133*^9, 3.7979380916026773`*^9}, 
   3.7979383760106173`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"2ba623c3-36b5-48c4-8e56-55bdc51bf84b"]
}, Open  ]],

Cell["Vector binormal.", "Text",
 CellChangeTimes->{{3.797688435807296*^9, 
  3.79768844110166*^9}},ExpressionUUID->"0c28d123-526e-4a9d-b70f-\
9a3459acd4be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"binormal", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"tangente", "[", "t", "]"}], ",", 
     RowBox[{"normal", "[", "t", "]"}]}], "]"}], "/", 
   RowBox[{"Norm", "[", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"tangente", "[", "t", "]"}], ",", 
      RowBox[{"normal", "[", "t", "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797688454894362*^9, 3.7976884658202953`*^9}, {
   3.79768853104996*^9, 3.797688572718259*^9}, 3.797688682643503*^9, {
   3.797689293298401*^9, 3.797689296683805*^9}, {3.797689408617427*^9, 
   3.797689410676154*^9}, {3.797689567172876*^9, 3.797689613514408*^9}, {
   3.797690334360744*^9, 3.797690335704056*^9}, 3.797690365744358*^9, {
   3.797887499699973*^9, 3.7978875022511387`*^9}, {3.7978875381085243`*^9, 
   3.797887540749816*^9}, 3.797937752127858*^9, 3.7979381239361143`*^9, {
   3.7979383812357693`*^9, 3.7979383828992167`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"fb59b93a-fd9d-4e3b-981f-bbc01264b7d7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"8", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "t"}], "]"}], " ", 
                RowBox[{"Sin", "[", "t", "]"}]}], 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"64", " ", 
                   SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "t"}], "]"}], "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], ")"}], 
                    RowBox[{"3", "/", "2"}]]], "]"}], "2"]}], "+", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]], "]"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]]], "]"}], "2"]}]], " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "t", "]"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], ")"}], "2"], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "]"}], "2"]}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], "+", 
             FractionBox[
              RowBox[{"32", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "t", "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "t", "]"}], "2"]}], 
              RowBox[{
               SqrtBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"]], " ", 
               SqrtBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"]], " ", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]], "+", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], "+", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "t"}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"4", " ", "t"}], "]"}]}], 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"64", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]], "]"}], "2"]}], "+", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "]"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "]"}], "2"]}]], " ", 
               SqrtBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"]], " ", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]]}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"8", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "t"}], "]"}], " ", 
                    RowBox[{"Sin", "[", "t", "]"}]}], 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]]}], "+", 
                 FractionBox[
                  RowBox[{"32", " ", 
                   SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "4"], " ", 
                   SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "2"]}], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]], "+", 
                 TemplateBox[{"6"},
                  "OutputSizeLimit`Skeleton"], "+", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "t"}], "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "t"}], "]"}]}], 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    RowBox[{"64", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "]"}], "2"]}], "+", 
                    SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "2"], "+", 
                    SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "2"]}]], " ", 
                   SqrtBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]], " ", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}]]}], "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"10", " ", 
                   SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "2"]}], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]], "-", 
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]], "+", 
                 TemplateBox[{"17"},
                  "OutputSizeLimit`Skeleton"], "+", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"Sin", "[", "t", "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"5", " ", "t"}], "]"}]}], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]]}], "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}], "2"]}]]], ",", 
           FractionBox[
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], 
            SqrtBox[
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"]]], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"8", " ", 
                RowBox[{"Cos", "[", "t", "]"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "t"}], "]"}]}], 
               RowBox[{
                SqrtBox[
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]], " ", 
                SqrtBox[
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]], " ", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"]}]]}], "+", 
             TemplateBox[{"12"},
              "OutputSizeLimit`Skeleton"]}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}], "2"]}]]]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{78., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 16708781398985599919, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{65., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 16708781398985599919, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{125., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 16708781398985599919, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{155., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16708781398985599919 === $SessionID, 
   Out[10], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.79793838341214*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"428ab94d-e2fa-4ec8-82a7-58f7c02c69ea"]
}, Open  ]],

Cell["\<\
Para mostrar que los vectores son perpendiculares entre si lo haremos \
ocupando el producto punto. \
\>", "Text",
 CellChangeTimes->{{3.797688593067993*^9, 
  3.7976886215423603`*^9}},ExpressionUUID->"742f1be6-9b16-4b57-bdc3-\
978ada2ed6dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tangente", "[", "t", "]"}], ".", 
   RowBox[{"normal", "[", "t", "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tangente", "[", "t", "]"}], ".", 
   RowBox[{"binormal", "[", "t", "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normal", "[", "t", "]"}], ".", 
   RowBox[{"binormal", "[", "t", "]"}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.7976893222226877`*^9, 3.7976893550642242`*^9}, {
  3.797689725445611*^9, 3.797689726715705*^9}, {3.79768980523582*^9, 
  3.7976898057174187`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1f944353-ed67-4505-a6b8-1b9fde330068"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7976893290535*^9, 3.7976893562589893`*^9}, 
   3.79768980640819*^9, 3.797690338634927*^9, 3.797690369354303*^9, 
   3.7978871152559633`*^9, 3.7978873911282043`*^9, 3.797937755926839*^9, 
   3.797938386197228*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"44a9a729-1b20-4590-a692-86ec0f33f20f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7976893290535*^9, 3.7976893562589893`*^9}, 
   3.79768980640819*^9, 3.797690338634927*^9, 3.797690369354303*^9, 
   3.7978871152559633`*^9, 3.7978873911282043`*^9, 3.797937755926839*^9, 
   3.79793838629871*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c643d666-90fb-4d16-bf8c-6eb0a5b552df"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7976893290535*^9, 3.7976893562589893`*^9}, 
   3.79768980640819*^9, 3.797690338634927*^9, 3.797690369354303*^9, 
   3.7978871152559633`*^9, 3.7978873911282043`*^9, 3.797937755926839*^9, 
   3.797938386355774*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"5f4e2d87-ee64-4085-b198-41a4d0dcbe01"]
}, Open  ]],

Cell["f)", "Text",
 CellChangeTimes->{{3.797685437140429*^9, 
  3.797685437499978*^9}},ExpressionUUID->"b6479c89-79df-4a66-baf8-\
67816c2dfeca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"inicio", ":", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], ",", 
     RowBox[{"final", ":", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], ",", "color_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", 
      RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"Tube", "[", 
        RowBox[{"{", 
         RowBox[{"inicio", ",", 
          RowBox[{"inicio", "+", "final"}]}], "}"}], "]"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tan", "=", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"g", "[", "0", "]"}], ",", 
     RowBox[{"tangente", "[", "0", "]"}], ",", "Red"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nor", "=", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"g", "[", "0", "]"}], ",", 
     RowBox[{"normal", "[", "0", "]"}], ",", "Blue"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bin", "=", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"g", "[", "0", "]"}], ",", 
     RowBox[{"binormal", "[", "0", "]"}], ",", "Green"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"curva", "=", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"g", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tan", ",", "curva", ",", "nor", ",", "bin"}], "]"}]}], "Input",
 CellChangeTimes->{{3.797688240995366*^9, 3.7976882604036903`*^9}, {
  3.797690110108759*^9, 3.7976901848107767`*^9}, {3.7976902231995983`*^9, 
  3.797690255408907*^9}, {3.7976903813487587`*^9, 3.797690423233591*^9}, {
  3.7976904759445543`*^9, 3.797690505848819*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"57e9ae5f-6970-45fb-8217-db558b0f60e1"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], CapForm["Butt"], Arrowheads[Small], 
    Arrow3DBox[TubeBox[{{1, 1, 1}, {2, 1, 1}}]]}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Line3DBox[CompressedData["
1:eJxdmnk8lN/7/ycqLRRStFkKqRRFUsklkhCpRFnaiULibUlkK0uLJUtSoZQQ
WSq7ji1kJ0ll35mZ+8xkjZjv8fn99/PP/bifZs65znVf5zqv18xIXLpx0oKL
RqO9WECjcZPrkorrm2g0FrTOccgfhizO/7vq/D4x28bDgryqrTYscr9Qadn6
f+Sad26RRvJKFnQsKc8oJvfZ2bb/+/9H/Qz2VWEWKCtxNTqS+xdmO8bayHWo
KZhnjRgLPDZtq1pM7nO69TLn35d4cMTnozQL2vHbF25zGBSGvyfEEL6Dd+0l
jZ0seCq48Fj9LIZr07X/G0/m5UvN3QdZoFvEr7L+H4ZDjfuq58fbuX/qyOPD
LOiqtPYUnMFwXqzyaRkZ70DbhoQeXRbYi/+JG/mLYXvATMz8PE8K7V0NTVjQ
uF7O9+AkBumwZ3rz8xiPTuq4O7Pgnvtxui0Lgx2vvOr8PHxxS0XOe7Bg46LD
R2woDGXW2mXRZJ6eDx/37b7Lgitbch7oMjB8n6zxnp9fs93MJSmUBadC/TpS
BjH0yz2Nn5///H2q/Pc7Flj8k+2fbsNwuM/cb37+mjURasfbWfDGW6e/vJjk
P/gRnp//FF1rxd5eFgQu79/0vRDD6/y/HHuMYQV3wNaVwyT+/cfcynIxGHR/
0ZmPK15l7mjIGAsEyx38jmRg2FPpETIfl+QDhV0ty9iwizp5vzUGg1zqt975
uLSTsrlvKrKh/Pw5Q+X/MJjUBdDn4+JbbZY6dJsNjjybM/mWYFD1K2HOx6Vd
86tQzosNh4JcHeI4FJjc/nvtLcLgFS/jdeUuG4Qb/fNXTlKgY3Tz2x0Sr9Hh
rZJPHrIhaXTnyrv9FCiHxlgJknivuEwrSDxnQ0DfdGtZEQUGmm2fatIwNAv6
8FRns4H6VmSebk9BR0qDY9AzDIYWovepPDZMTMw95bekoPjzz7H2KAyRX2Mw
p5ANAxKJK/RNKdjZfMBGMhLD+weGDoxSNnwwf9l0QZOC0PfbD0WGYFDWUSxj
1LHhtXzClkFhCgb05KL57mE4GqN3NKibDQYhR5/5ZDFBbONgma4NqQeF8P7Q
XjZw31ngVpDEhOfp71Yst8bwWZOR7NvPhjOZL6yanzNBf72LWbEFhp9mjcW7
htkQEp+dHuPDhCc8QzyrzmNIcClIz8FsyAm1C4s5xgSjOZlcnRMYvu07KbqT
zYbxkzufVKkyQXjlUtUSPQwqOyfbQ/+wwbRJVuq7PBO8vxXWyetgeJveaS05
zoboOaaYnxATpNYVCo+qY0gN9Tjt/JcNY/b8Z8/+YkCImZYFryIG833GY+em
2YAXazvfrmbAdCu2UJHHkLJKREhphg0NCakv3QsY8KGmw+2yLIYGBxmc9o8N
lv1FVzfEMMDP929/pCQGrv1C2Sdn2TB3TV4qP4gBWqYXVOPFMfAkiK3tI9wz
Tk9pnycDuL75piVsIPFvjv3SNMeGlMT30d/OM0Ct8XHXYyEMS65rbZTnsOHg
jQ4B1nEG9FbXvrrNjyE9w2WrO+EWr8MkGcCANfpXfEx5MdxU/8vKItxDUKK/
Qo4BG2zveu0m9TiulOjWRfh/d+YsfMUY4FV5Loa2EMN1W8faKcLfP67MFV3J
gIJA6fYvpE7D75ixOIR//qo2+nSODr2XBVR9ZijI+OAyMk748Bk9qXEmHbTC
jEv2kPq1+Ecv+UV4wLq/l+Tb6bCxXeF61x8KfIxWT2YQ7mX54cT1Wjrkm5U+
raEo2Hq1WcuN8EPilXfvF9LhSEGIQMYIBY2w3riD5MFMwGXS6QUdSLV2Xeqh
YBv+KuFG+AFDAWP1R3QYmPmwX76DglwhMwkewudmFh0YdadD0Jmq7vGfpK7t
BVvHyHOJDZFt5DKjg1OY8YZrjRS80a99dprw2dZ9ry/q0uHxIlaGSC0FC/uj
Ut+S53t7w5mDb/bTQQPveIoqKXgvLPNdjNSDnEfSwt8idJi48ufCBKLgHAqj
X5gg632QVczVPAK+cQ5jPO8pUDfvajlG6k1nLj4msGQE4rbP7bmVRAE1uVNz
2xgbfk5uqhpPHwFXM4GmntcUMG/ol+eSejayEzx159EIfOS9Ihr7jIJ9Jn82
yjJIvRntED2pOQJ9bftlCgIoSPQpsL7SwYZjLbtuC6UPg2k6Y1ngRQpqX4T9
vN7GhvvprZlTz4dB5fZlHy8zCmz/2KtZ/GLDPcMB89LAYaBqwq7aG5P8yK0Q
3NnCBqWnoya8l4fBulzOa58eBTO3z8aK1LLh74GQlTeEhmFiXGrFTWUKqnRf
XTiTwwYu16nkAIchsJz5XOzMR4HgLNfSQtLHjqq+nny2YRDW+cesHMhgwtX8
iAIpbzYUx8fw9y8ehAjqevfyFCbM5qVMeHuwYTXj52oR9gCc234/clsCE1J6
tSVWO7NB0KRUWeXLAOjxnUs/Gc0EG7PGI28t2VD2unqnp80AcIlqVumRPtHo
WJfso8mGZbobwriy+2G6P+03y4AJx5Vm84ymWXDQyFTsqUofKAe/+jM2xIAt
YrwDz9RZkD8UcGXVym4Q7VE10V/IAMGTUd/plxlg1uI+eSyrCXqqVhrsyR2G
xmj3uncvB4HnwNbaDYuTIINbJ9hddhDKer40hnC6oenw4hDrvmp0fiaLr4Sr
D+4mxLfgxT+hyU+2Aj63I4VMjU3Tj7pA5ECHjeeDeigq918fe7IfOYYN3Fop
+Qsqb2twL3/9GViCCzxdf4+gPcM+ViaSTXBU8olB+8HPcLpuae5nxgh6vqDP
sXJRE4RszjY+2loIC0+1qI7MjiB6iBbP7sFGMDi6LGRkRSHcPZU9zBKjoz/W
tn2TSY1QGelmaeubD4vHTw3kXaKj/ifNx47LNUJUKM+S1sAcaFnWKK7QS0dS
K6PuKOxrgDOo09dh5QfQ/SB+TquegYLedyC+8BpovcUTrVGYCa/bHDaKtDOQ
xnbzy8OnCa8ur82/ngk8ModUakYYSH8B0D4L1wBNX1MyvioDpqQFLnUsYiLT
8z8un3xWDVFLjrudCUkHKnG0NXE/EzH1LHy2vqoC2lXNkSsuKXAn8j+p6hgm
GjuNXsW8r4QLjEWwb+triGi4k80yoJDepBKbv7QMxG9csL6eGQ8cdV6nHhMK
gZBPuOW9MrjAUlw9phIP6i9SNbKvUEjg8cSpbK0ySNdwkFhu9AoycTW11JVC
4p4yl3RqSkHNq47rfFQcsKN63E++oFDXnUBj5e8loBZzP0K8IBqax/tbrHoo
hARfBagNFAHN6kDJmdJgCN81Le9ohNGudzZRTcvyQG3Te0vJJ0HwKi12YbYZ
Ru7Xr/PcCcoFr5SrL33tH8Gi8SejbZcwMsuzOL9ZMBdo7hwDLsUHUOQuy1tv
h5GASIua2doc8PIps5Ca84Ms4e/3de9hFPDwA8/9LVngdWTRWyk1T9gi66bw
MgUjnsi10Vg9E2g+S6dMn3mAZ/mTAwszMErreOmpVZ4BtGXRGzsXuANXQeoK
7U8YFX7olHmmTXjQm1vfWK4QORm1yLUQo2PeJw8qGaSDlzdfQIKRI7Q4RFZf
q8FIT+i4mUdeCtDu7L380e8KfHuxuyiuD6M74dMWFszXQDM32pTidQnk3n9+
fWoQI2vnsHy7jnig/Xi01jXiAixe/7mgZ5jw7Xp3HOpfAc1rRcxOMRPAAyW3
IyiMPCT33r6WEQc0y6l/HcNGcCrFZ2MuC6Mdm0eiPx+OBdrAtxDdkVNQErdt
KOcPRo//tN+KlX4BNEZn4TcRPeDadQkfm8BI2MBLS3skCmhqjWpHzI7CHIO5
pXsSo+ROc8tVNZEkz//pHF9+GNo3mHif+ItRsYCA+I/UcKBFgdStM/tAo84v
pHwGo9wj18v0boYArUvNwEhFAXpv3tOo/ofRaZ3Yz9wJD4FW1Fm5Cm+HjIYu
gZRZjE7xL6Fftg4AWpzFAyWhzXAr6fm01RxGywMMVQtl75J4zr1VbxCGD1z9
/xZwMGp+GN4o0eUJNNqlMtd3S+HG9hUiLoSHMy/sKbJ0IfmJ+JTQO6YqUhCu
W0m4zRpVgfRftuT1z+sS9tercj/Z+GSccJkzfmnv688Srrb5z90o1V9DTtNz
hOulbeASklVDNFpJb8PbPtVvMmFOfYSr7nJV6pq9Qrj7zUsdNMgXCVuSQPjX
PMcykykHROu6K7DprQB8L8v/oEF48Drj9UU3b5PXp+YgFVEI8r3tUkjW9XJr
cmfQuDeiiedr/BPeArNjVoarCL/fzHyrvNsP0UTe+O+4IA8qXBq6miQ/9LXy
Sm129xHN/mV8WJAKOP3zvn+Q5DnpVz170X+hiCYkHbrf+zgcXHnOwXMco7mH
MRsnGE8RzSFb95TdSeifqFTLGsWorkHVWWL5c0RrCaqtPnEaJO8UK35lY8TH
/Yd1eGsMotml1YzmmkL4S5lIXyZGB1aITeTsfoloSnt+6/lbgGrA3ns6vaQO
u01SkuzeINpIzgI+9n9wVu569eZKjMYLP/sY96ciWr9hfreDM3TrMfREyzAy
etr8YtnYe0Sr9ONdweUKja8vbR9H5LnzcN8zWZCOaB3w6srR26DwiXuZcjZG
pYj71OTKDKSmcqb98n5vaB950yP4GqMh0fDjE7IfkBdVncD7JhAiruQPSbhg
9NtUMXrIIhsVacid78u/D23p4y8MbpL4g/ae6+nNRrS3exe7tj4Ark+Xn124
jlHC3J1jLRdzUFHOzaTaTUFQXyXrJ3keI7mD9bIp5rmoa+0G1UV3QuGhl+oX
FU2MeJFrLO/pfFQkpPYorzMSjtysffpxOUbDPvuu3VNHqOG1f7VH50u47pWq
PO5NoeDVKyj0oBRdGF4vrG+TAdHLt7pmr2YiwR679/+dqEZl48kXtyiXw4mj
Lq/X3h1Cw/tjB9J6vqMspaf2e9Y2A+1WmG3rqR70tW6kGYW3o2u8ksfMe9tB
iZtpebCpBV007v3jKN2DRrqTlVxD+sD9nbrDjj25yFXloe1S93608WOtbcLr
YTg8teZ2i1ApNPcVOF8+NIT0nxVLZBA/0xOSwzJd+AtYFZIlP7+PoFF2z8em
SRYkzryMfSDfB9x/f1Mx/QyUsOza3pF/LHgubZ/692gfNIdMPLzIYCC/PCul
iQVsUB5T4zG82AfDfaukNo4y0ETef9705WxILDyvVhvaBz4n6lQ8aUx01j9U
QUeMDdc/0PbWs/vg8Y+BNmodE/0pfH21XoNw/sjhf6n9sPHzNTc3fSba1qi7
O8uXDa3S8ZsvrhkEFTcDU+V0JhKd3euu488GxQubzskS3XA/SkJeOIuJ5NNK
VjXdZ8O2xIQ13YcG4YvFdC2Vz0SjZzOW5IeywW2TZ+pi20EwExE5H1DBRGVF
54VHY9gwtM1vq1rJIGTdyE270sFE668uOzuWxYannz6ZmVgNQW3PopaiZRS6
+dXdjKudDU5ip6ziXg1DZIcwnjWnUI4ibe/aTjaMzH6dWpI9DCnPkprNL1NI
oZY5JkZ83KbdHbKG1cNw0/gN3ycrCv0uXzzxr48NO0VObH48OgyqCmWO2o4U
2pvI5hujsyF5XW9lkvoIpO54OLA0gEId1/kXBjLZUInbxiSNRoBbTfug5CMK
dWubRPARH3dN+OsKH+sR4Hnj+3vPYwqVXH5m2U9074+12z92B49AtW7SkOpz
CvkV9H6rI7raFPldUvw9AiPdjRuH0ijUacfO7JxkwzqD8OgC5giQ4g0o+Egh
zxD94c4pNoib3VklTaPD8NxFuYBcChUxTQ+8J7pdZvWY43NJoueL9ssuKqVQ
nS/9iDvR+Sbs9l1JSsTXiN3xzKqg0A3DwMB9xBfUtFxojzxKh5flfkvP11DI
SMQp3Jv4tZdZju+EbOggUBtVEPGdQq4yCnq8xHfUpnu8ee1Bh9k+Wu/mXxRK
Lenc6Ef4RLeQyupgOuz5RN+f1EGhUrvUoSPE7yz2scJPMuigFrbJ7ekghaIL
Gr49ItzzTWFfUgkdHjl1n1vIoFCExGBOKeHikY1bnn+jQ3PuEntLFoVM8mJD
hgi/NKPzxq6PDkJrzqSgMQrJbSg49Y9w79IxbYlxOrz6EirI/5dCmuf5Z+YI
v73vM9fHRQx4EOj20niWQgwZX08W4XXr8guk1zBgKPGnceQCjDI/8f1qIHxR
6maLW9IM2Mt2VaxZhJFTbz53HOGHvxkOv1NiQE6WpNLfpeScPJAybj4f/+YG
pc9HGFDS/M504wqMomZWJi0jPHTmwIF0IwaIvO+MVxYkfd3BcJ88yc8S8b3i
Cs4MwGWxTwzXYdToP74kieT5RXV1W+k9otftf6udFsXIr/m+Jz/hfgOmSxQj
GPAlc9MSvU0YbbLu0XpHnuPnWAHLzA8MMM3XZ0hsw4ixNCZiJamHO3H/GUth
si7pxYwL+zA6dOET4x+pq8V3fRLSZhlEFzhbrjuIUe+P47mtxK8ZWcb+FuFl
woLtWyeq1Eiffl70zHSUzDtqkuUvw4TJWMkTAkeJbnJOHHhE6jzPxuXa9/NM
MF4S3rqb6EFp7a9tscSXHT7+n9zmSiacLKrRr7Qn53NwdsAT4sseHjtxsOQb
E27LJm0rdCTjt3+L8yS+bEGHxDONTiY4VXB2Jztj1Bn6aLEE8WUXJxkizHEm
fB9TKLdxx+i62Ar1xBpSD0cbe39KUGCm0tAT5o8Rt/WY2xfSB4a5s/UE/qNg
upZjav2c5CHil2bJBzYIVCQebPCgoPmGRUpXDEb752K00tLZEJOl22zvT0HT
0UBRg5cYaXp6951NZkPa2hv1RtEUfOJ7aSGcgJHVRVVl9nM2fI09MfXxMwXj
EeF2WmkYKeU7iUp7smHsmd2JzAUY0DERSraI6M08Mymp26Q/nJ+191+KYeme
0dXSJRgVGQoeFHJhg/alHSkHBTCIBnwxEibn7UML7ycldmxYyvxtpCeOIdT1
skRPBUZH7v6rOG/OBsni9e+nVDAcHXWpFanH6MnR7vLovWT/VtXo37LHMBos
JLasjaxX7NOG6N1syLzV0WTmjMH6wce4u+0Y2bp8sQncQfzjSdXFEu4YUj3d
FSc7iJ5auG5q72Y2TPkIXtH1xxDtuDq0rBujylGnhGY+NmRVLb685TmGtIlG
IRrRuQdpSYzlXSyItQjhnUIYVJ5tpk1jjL7vvTsu84sFz7y90xpKMQzMvo1j
ET0rE+ERqtTMghuJNvh+BQaewtgXnUS/UNfkfTdXsqC+bJny6zoMyfcWpyQQ
vXM8O/jU4TQyzpHsYOvfGJR5+oR+Ep1booSn+xNZsP7CXIF+B4Z+na1hj4nO
vdj/Ya/rKxbZD4O2q7sx1Lfq2hyewkh8YYKjXQQLpotEDbQGMPje89oZSvSv
KIvF88qNBbn9rCYVjGGt9X9UHdFlB5R/2FQ6smD1GoOfO9iYiOPLoEv0b4C/
gG2nDQvUZzRO0EYxaJetGEGEMyuDNTrPsYCmuCJYewKDuqbsscdE910W5ayv
NGZBXyU6UTSJIXObDTeLcDP1teEvDcg4UQWeIn8xeCRzCx0h+vHuL00raeLH
V24PEbGdwfBjakjt97yO7poqb9zPgrS9st7W/zCcW7fKfB3Rp2MtT6psFVig
tSrGQGsWg5K7XtMJwhXePvlvejsLBh8J+C2ew7Di9/04b8J/dNwud5FkQWFh
vfhbwgUqUUUS4X0ZLcX9G1hQzlEV38rBgBN7tKoIl58+anV4NQvMp3p8HxLe
lk0X7yV8+16f/DA+FuSHmek2Eh7G/f3kGOGRj9QKvy1iwZHF15wnCT97I7p9
lnCnoJcdS0jcbTUDC+e/D/ibua+YXNH06w1v5z9XpqdUTwwSXmOSOfuX8EHf
8h832jB4f9x5LJPwzIpFYQzC656E/OdUg0F+v8aic4Svkdvr/YPwJ2GB3mYF
GHrazm6ik3XRo3Ur8wg/fKOdSyoFQ4BvV/xZwlOHta0iCeed+uFo8gADf4d/
yy8Sl1eDzAclwr16rGwq3DCUlK4JZJL8ix4TPzdD8m8tuZW++hqGlJV/XnVP
Y8i/KXcph/D4n3pBxkcxSOxL4bebwmAT3+K0nvCHTVsmbbkxZC25Nin8B8N6
J/fae6ROjLwtUwbZFBRZVS1WYmGI1DyjwUc4r8sUv0YXBfnBKQF7KAyCkhzB
R6QOFzY0zcUUUBDnWEBvHcaw0GtbkdM08QefhgUZjhT8OvjrekYnhleGX07T
Sf3rilkldrUx4TivfvS7Lxiag1wfXyX76/dMhUZjBRP2RPfrBBVjKJVaXnKe
7MfBfT0pMZlMsj879usVknhFj47pk/3r/iVpRYM/EwYntRjnP2Lo6Jq4KEj8
BOcnl3SQPBMEVEYlf8ZhODkue33HEPFVJ7uavG4zYCH9ElvMEQMj+ea9j6T/
VLVKloVOjsCB1xePyM1SoKOe1L2U+IbRa0lVNx4MwuCNjLVnk5igKb8Fsa0w
sj+l8Ht5QSdcKvzDSWwYBvV78kIbrlHozP1AoXv1FRCl9efpTFcvrDG7lBVc
z0AX7pk0F2WWItd0BdoWw59QvtyANzB/BOlXNdkmy3ei1SlDfhselsGK7fUm
hy4MIdVY3VBjKTqyC2m4ea87Dykm35Lnt+pH7xlp7VYpf1CiuKDDvx0t6G+Q
ILevTg9y8DBtTJKaJOe/k9/sgh50+oGz9ldGO+oICHQr3TKDWpnlGurHhlBU
SfQPpNCCYieryooUZ9Dk7gWRX8h8JeNgsH5NC3LbevPu+0MzyLm4WHKX0xCq
jJ2zvDn1HbWd9NlnajqD/nzRSyx6MYSSt318wFf4HU3PhhlOPZpB49dGxRBz
CP0OzHdffOQ70rtAP6LMmkGVj+u6ZQKHUUTkEeMFxs1I/J/tvcDEf+i/MzWi
O1JHEOV/kaPn1IRc8kQc7Qdm0bOmOr89CQyUWBtf91m7Fon6Lgj9h2fRjErT
+qufGGiJQsvgcp5apGT9vdzx7yxaPPC21qWMgYYrf6UblNUg1+QnpzfzziEL
60F1pR4G0vtcF1OsWoMuvbjA7Sc/h7rLq59KbWCiJB1BLg2FarQ03XvBSac5
5DeRlYACiV4Xm0tuXvcVBcQeqKqm5hBnt3Kwsy6FKj5piOb1laGm1XEJyeNz
KC9sm6KtEYXuvY28vOllGZLPbn3u+G8OLbu5R+TQRQq9u+tQdNe8DK3vcCso
XcpB8UvEbLycKXSHfmCFckspmvshvNpsMwf93FzONo2lkIBEpohpRQliPbVo
uXqSgzKLhGzcR4jOu63WG59YhL66ehp/ieWgMy3LN6+3xEjtb0FLSH0OiuTX
jX8Sz0HDQjPjSjYYbR0yLthvkIManC01jN5y0OUploWCA+lH51ODOxqy0a2m
Qceo9xzkdUZqUZ0H2bdbiu4INWWhDV77DskXcJCgKScuMIyc39su/FVp/oha
BSQ2vvvGQTFXduaszsUoJ7n5wPMf6eiMleLpQy0cVBZe36RciJFbZ+DQqHE6
0lrzNKu0lYPczz/ap1KM0bq+EVpwehqSP93DeNjOQfkhTr97iX/vlsI9XzJS
0UD6BJYf4KCds35LslowCl64NbntQxLa9CS0unCUg9rstWUvMzCaCahbO5D1
ElWnLv68epzkc62AbSCFkXq4b7F8dhza7f4SnZ3goOMaHyqDSb9IfKB3i7KL
ReqDvIw3U4SPBFeqjGHkPKp3ln3jGeraPiL0/i8HebuLWveOk/Ngnbu6lf1T
xLm1WPvVNAfNFMhtvEb61PUwu8ZW+yfIpKW+Xv8fB2XLdOcKk752ZfWzzsSb
YUhllYAEzywHDXg1x6qSPpjDPn1uqUMo0s7JdXs3z3tZYZqkb8bxpnJX9wWh
OBXVtgNzHMRMlouQJedr2PWisNv995HHcknNHMKTRZJfjRL+PtPORmrAD324
u+CTOIeDdpg8zY8m/TrjoPqjrwM+iHfWY7sT4e/8jTolyHlQ/+4RvbHOA8V8
PpH4iXDJNyZ8gYS/ZwjqLm1wQiuXHtneQzj9lapmA+FI7IK986vrqEFgz8dp
wleey/cj5yDqZS6pTNA2RkoLl2lwCH8Rl9Q4/znVtF2Zus7lQxC5oPgHJrxG
gkt6gHDJr743XIyuwFGJqw41hHP7tfumEl7gu/7F8m0OEGm/blUE4ejcf3RD
wmsbtP62yLjB6z9L87QJN90mZt5G1hWxNWKgdpU3JF99v96F5KFiV+aFByQP
HvrN+K5gIKjIrvmBST5HFtNHM0k+f1YuC/kh8AhEysWiDQk/TPsZlkfyf3HR
pHNoQAhYxSrv65nhoMTXzbPWRD/Jih7/U+8fDlnSwhQfqYcOHa0X2kS3Ve1O
s1ju9xzOOLLZDFI/mnd7jtwm59BmxS0sn9sxoHog5msOqbeEdE/NIHLeNHQ3
hN9SjoPBLJupNaQ+656pa5+hk/p/sa6vfccrKNPb68hkkHw2M9+4Ez16KWmX
pr1IAqS0hS9fSOpfn8eGsYTU/1N+jxv+jFRIOW5+rY/sx+S1Kc5ad4jfkLc9
aVuRBZHhvHMX3nGQ2uEHQUmuGD0CGTujw9kQ3CoXX0X2dYjy9RtMsq/XSh8a
21ecDX9yI3ZYxJE4vQ1erbtKzvvShAqclwPuv8OjskPIOLUztsv1MRrw0Tq8
6n0e3K13e9tsy0FYjbPo2BqSzzz2RbGwz9AtdKpm6ToOkl0pfNUthEJ8q067
FG4vBR1l/9i0VRwULXfG38iPQnlCu97N2JXCMZ2hQuDjoAenH8ryu1Mo/6To
JcXMUthycGxMlMZBXx9dVNxwlUIOW4AvQrkMErNWzP3sm0NrVuoERB2g0MB3
J00BzS8QeqNQ/2jyHJp+dExxRwcTocBFyX1mFfAx4lSqstQcMpRJEJRexkT0
Ug63o3811CEtSbX2f6g6Y2FWDY2OQlSVTJb2NEKl5R6F4yl/UWJ//THLiX70
rPCTsNuZn7Bd1stVbc84GmNLuV2ebUcVnFD/jDtd8PGEcvH0ChY6PJfuo3et
BiUet2o0He8FgVzk5JlEztuHJwLzvkbChvRXPdldA7BjnzP/kYXNqFutv3Q3
NIFUqbllUsIweEUetRN0DoNJj+POj692wUKV+GGDZjrMZugp9TxohkjFE1PN
wQOw4bJbRNcDJpjdjY2Mt++F36MPpj9k0yEk7ID+zmEKJNtOx2UE98K22eZo
lwrCM356qDMJN7/rmfC+F77z868Q/0GHngHxjceJPvs4Ke1wmNELBoa75MUm
6DBwKivhxF8KtEN01h637IPiR1UFzbsZ8E4gu2pmCYZpj3Hd4NP9sFGzewP/
W+L3B8a8e6UxXHv78y2ID4JshnqepRsTjrrvsps2wzATIu28SGUQfHqkhJP8
mES35lSvu4DhV1gzPc14ENZf8Qyte8yEiB9N7gqXMVzVyA3KDBoEh9qtaSXJ
TPhNy23Rs8bwPTmQy3ZmEKKGY47q/2TCTeEQQ2knDA6e2R5J9UNgjZ9uHpYn
6/F53WpB9K7h9OWb7ZdGYEb49u++rxQssZC7ui4TQ1FxXBvdYwTkSpVlHL9R
MOZJL/Ylus/lZM2ilqgRGDmGun63UcC+ucCxNwtDhW+f/sG6ETim6XhVBVOQ
MXPm+718DBrZiHV6Lx2aNaMilAWJPny409+ojPBNRu9fcjHAnCNiLnQCg4F4
F++WZgxf9+fevrKeAaEqidcOn8GwWanNffw7idMvaiWXIgOaPNao65/HMFZD
25f3A8Nzrf2naq8woMjSRhbbYDAPiAmTJr5Q7+qe+ldlDHC5um+ZhR/xEdvr
S+8T/+fM4TJT9WACf22W+fw6zUy+JXgRvyGw86zd2zAmiGxttp5fz+Orm2M/
MInuN/vnMUL0qDSfS838emgPzre1ET1+UUfdeu47E/wdeu/Mr6cnXVFSkPjC
r6pFR8xkKXCSLl00vx75DskunnGi61lb14YfoiDxptzu+bib1cImGIRXxLdG
vDGigPVN5NF83LOrbY5XEr94TYlmddqLghdtXYXzcackGVZcJH7iT13yjcFG
CgK3Cr2aj7ss1+arGPEljvulwuj9FGzaxfgxH5+r7D1GFuGdQW/XfiV1aqnA
Jz4f381rhw0OE3+z8lyiHL8EBn2ZiLb5+J738v08RPziIb/gtFuKGJ7qyByb
j+PPz6rZDMI9Zo47FmhhKK4xK5uPgy4QfkmE+KdtVXuTam3nfS9vxXwcR2wa
6RWERx/W4HvuhUHRVl5/fr5DK/n5Beb932lWlEYYBuluzR/z84mNY0cDwi3R
W82yN6SueUUuzo+7pcZc2G/+91rlC/hEczDctXg5Mj+u4wHt6QzC7eTLhwyq
yHOilv/v/dM9rzc0k2uvDqPJjPhEeaWMv/Ove2xqeYcx/7uwkegvh0heDM+s
+9/9HyU/sRlyjbkhkz/vP///36f9H/JpihE=
        "]]},
      Annotation[#, "Charting`Private`Tag$2755#1"]& ]}, {}}, 
   {RGBColor[0, 0, 1], CapForm["Butt"], Arrowheads[Small], 
    Arrow3DBox[TubeBox[
     NCache[{{1, 1, 1}, {
       1, 1 - 4 17^Rational[-1, 2], 1 - 17^Rational[-1, 2]}}, {{1, 1, 1}, {
       1, 0.029857499854668124`, 0.757464374963667}}]]]}, 
   {RGBColor[0, 1, 0], CapForm["Butt"], Arrowheads[Small], 
    Arrow3DBox[TubeBox[
     NCache[{{1, 1, 1}, {
       1, 1 + 17^Rational[-1, 2], 1 - 4 17^Rational[-1, 2]}}, {{1, 1, 1}, {
       1, 1.242535625036333, 0.029857499854668124`}}]]]}}]], "Output",
 CellChangeTimes->{{3.797690168139814*^9, 3.797690185250759*^9}, 
   3.797690256176696*^9, {3.7976903746939297`*^9, 3.79769042380661*^9}, {
   3.797690495823197*^9, 3.7976905064237757`*^9}, 3.7979383891758432`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"250e23f2-dcb3-41e6-a482-5f9aefaf7185"]
}, Open  ]],

Cell["g)", "Text",
 CellChangeTimes->{{3.797685447344405*^9, 
  3.797685448581517*^9}},ExpressionUUID->"a37f5f1d-0ae1-4830-9283-\
934fe8681bff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"inicio", ":", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], ",", 
     RowBox[{"final", ":", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], ",", "color_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", 
      RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"Tube", "[", 
        RowBox[{"{", 
         RowBox[{"inicio", ",", 
          RowBox[{"inicio", "+", "final"}]}], "}"}], "]"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tan", "=", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"g", "[", "p", "]"}], ",", 
       RowBox[{"tangente", "[", "p", "]"}], ",", "Red"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"nor", "=", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"g", "[", "p", "]"}], ",", 
       RowBox[{"normal", "[", "p", "]"}], ",", "Blue"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bin", "=", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"g", "[", "p", "]"}], ",", 
       RowBox[{"binormal", "[", "p", "]"}], ",", "Green"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"curva", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"g", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"tan", ",", "curva", ",", "nor", ",", "bin"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.797690597902389*^9, 3.797690697524102*^9}, {
  3.7976908080289927`*^9, 3.797690823231567*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f3ca313b-501c-4950-b2d5-7a2c2c41c23e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p$$ = 3.4177619259987924`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`p$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {161., 166.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`p$3154$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`p$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`p$$, $CellContext`p$3154$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tan = $CellContext`Vector[
          $CellContext`g[$CellContext`p$$], 
          $CellContext`tangente[$CellContext`p$$], 
          Red]; $CellContext`nor = $CellContext`Vector[
          $CellContext`g[$CellContext`p$$], 
          $CellContext`normal[$CellContext`p$$], 
          Blue]; $CellContext`bin = $CellContext`Vector[
          $CellContext`g[$CellContext`p$$], 
          $CellContext`binormal[$CellContext`p$$], Green]; $CellContext`curva = 
        ParametricPlot3D[
          $CellContext`g[$CellContext`t], {$CellContext`t, 0, 2 Pi}]; 
       Show[$CellContext`tan, $CellContext`curva, $CellContext`nor, \
$CellContext`bin]), 
      "Specifications" :> {{$CellContext`p$$, 0, 2 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {206., 212.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.797690641376216*^9, {3.797690678223736*^9, 3.797690698123498*^9}, {
   3.797690811405027*^9, 3.7976908245126867`*^9}, 3.7979383922835693`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c482ae59-633f-4858-a311-b75201168f33"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 960},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 para Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"4ff590ad-fd5a-44e0-a597-bca7314f3ae2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1062, 15, 97, "Title",ExpressionUUID->"2ef3dd32-2ecd-4b35-b479-30e2be5b84ee"],
Cell[CellGroupData[{
Cell[1667, 41, 204, 4, 69, "Section",ExpressionUUID->"e653d2e1-e52a-402b-961c-1438eb5a1a38"],
Cell[CellGroupData[{
Cell[1896, 49, 431, 7, 34, "Subsection",ExpressionUUID->"18605a16-c248-43cc-9457-9c8fc2d0f7cc"],
Cell[2330, 58, 602, 10, 34, "Text",ExpressionUUID->"c6468bc0-1221-499f-982e-8f8d25b10b15"],
Cell[CellGroupData[{
Cell[2957, 72, 740, 20, 91, "Input",ExpressionUUID->"fe0dfe8f-f769-4b4b-a7e0-f40773c9f34e"],
Cell[3700, 94, 13919, 241, 342, "Output",ExpressionUUID->"7cd001ae-cf3e-4e72-827e-fdf316a09316"]
}, Open  ]],
Cell[17634, 338, 542, 8, 34, "Text",ExpressionUUID->"5799799f-0f13-4f96-b872-08a1426cb179"],
Cell[CellGroupData[{
Cell[18201, 350, 1672, 42, 91, "Input",ExpressionUUID->"04e010e1-10d7-4bd6-8565-e37ff963d318"],
Cell[19876, 394, 32164, 544, 250, "Output",ExpressionUUID->"c874ba13-1ae5-4266-adb3-7874595ab329"]
}, Open  ]],
Cell[52055, 941, 289, 5, 34, "Text",ExpressionUUID->"ebc0eb86-7732-4a64-8f05-137c8da978f0"],
Cell[CellGroupData[{
Cell[52369, 950, 1542, 39, 91, "Input",ExpressionUUID->"ced0535a-7aac-463f-8dbb-226d3250e532"],
Cell[53914, 991, 18420, 322, 238, "Output",ExpressionUUID->"7cba2194-0b4c-4a37-ad26-66f5fd81a4fd"]
}, Open  ]],
Cell[72349, 1316, 293, 5, 34, "Text",ExpressionUUID->"27b28d6b-6ce7-4056-b70f-bc98dec8c836"],
Cell[CellGroupData[{
Cell[72667, 1325, 1402, 33, 55, "Input",ExpressionUUID->"413797f9-89f4-4d00-a895-6d0e2d979415"],
Cell[74072, 1360, 58784, 1017, 252, "Output",ExpressionUUID->"c0cdfe73-cd9e-4709-8e76-2e21f5b866dd"]
}, Open  ]],
Cell[132871, 2380, 241, 7, 57, "Text",ExpressionUUID->"3e8e5ebd-ccce-4751-ade6-9d409d7cc2fa"],
Cell[CellGroupData[{
Cell[133137, 2391, 736, 15, 55, "Input",ExpressionUUID->"95e38169-50d0-4987-8d38-2fa6eba9be6c"],
Cell[133876, 2408, 2653, 81, 69, "Output",ExpressionUUID->"17f0b809-7bb9-403b-ab62-c73cf2c8a7b8"]
}, Open  ]],
Cell[136544, 2492, 179, 3, 34, "Text",ExpressionUUID->"f7edd805-f400-4255-bfbd-7372da82bea8"],
Cell[CellGroupData[{
Cell[136748, 2499, 1028, 20, 55, "Input",ExpressionUUID->"7eb95a61-51e5-48ca-96a0-0088490e6a48"],
Cell[137779, 2521, 12307, 338, 239, "Output",ExpressionUUID->"2ba623c3-36b5-48c4-8e56-55bdc51bf84b"]
}, Open  ]],
Cell[150101, 2862, 157, 3, 34, "Text",ExpressionUUID->"0c28d123-526e-4a9d-b70f-9a3459acd4be"],
Cell[CellGroupData[{
Cell[150283, 2869, 1048, 21, 55, "Input",ExpressionUUID->"fb59b93a-fd9d-4e3b-981f-bbc01264b7d7"],
Cell[151334, 2892, 17675, 450, 192, "Output",ExpressionUUID->"428ab94d-e2fa-4ec8-82a7-58f7c02c69ea"]
}, Open  ]],
Cell[169024, 3345, 252, 6, 34, "Text",ExpressionUUID->"742f1be6-9b16-4b57-bdc3-978ada2ed6dd"],
Cell[CellGroupData[{
Cell[169301, 3355, 710, 18, 127, "Input",ExpressionUUID->"1f944353-ed67-4505-a6b8-1b9fde330068"],
Cell[170014, 3375, 342, 5, 41, "Output",ExpressionUUID->"44a9a729-1b20-4590-a692-86ec0f33f20f"],
Cell[170359, 3382, 341, 5, 41, "Output",ExpressionUUID->"c643d666-90fb-4d16-bf8c-6eb0a5b552df"],
Cell[170703, 3389, 342, 5, 41, "Output",ExpressionUUID->"5f4e2d87-ee64-4085-b198-41a4d0dcbe01"]
}, Open  ]],
Cell[171060, 3397, 144, 3, 34, "Text",ExpressionUUID->"b6479c89-79df-4a66-baf8-67816c2dfeca"],
Cell[CellGroupData[{
Cell[171229, 3404, 2081, 57, 235, "Input",ExpressionUUID->"57e9ae5f-6970-45fb-8217-db558b0f60e1"],
Cell[173313, 3463, 13684, 228, 319, "Output",ExpressionUUID->"250e23f2-dcb3-41e6-a482-5f9aefaf7185"]
}, Open  ]],
Cell[187012, 3694, 144, 3, 34, "Text",ExpressionUUID->"a37f5f1d-0ae1-4830-9283-934fe8681bff"],
Cell[CellGroupData[{
Cell[187181, 3701, 2088, 57, 235, "Input",ExpressionUUID->"f3ca313b-501c-4950-b2d5-7a2c2c41c23e"],
Cell[189272, 3760, 2757, 54, 444, "Output",ExpressionUUID->"c482ae59-633f-4858-a311-b75201168f33"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

